{
  "Snippet for CP": {
    "prefix": "cpp",
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "#ifdef LOCAL",
      "#include \"debugging.h\"",
      "#endif",
      "",
      "int32_t main() {",
      "    ios_base::sync_with_stdio(false);",
      "    cin.tie(0);",
      "",
      "    ${1://your code...}",
      "    return 0;",
      "}"
    ],
    "description": "Snippet for CP"
  },

  "C++ Execution time": {
    "prefix": "etime",
    "body": [
      "#ifdef LOCAL",
      "    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";",
      "#endif"
    ],
    "description": "C++ Execution time"
  },

  "Custom hash for unordered map": {
    "prefix": "mp_hash",
    "body": [
      "struct mp_hash {",
      "    static uint64_t splitmix64(uint64_t x) {",
      "        x += 0x9e3779b97f4a7c15;",
      "        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
      "        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
      "        return x ^ (x >> 31);",
      "    }",
      "",
      "    size_t operator()(uint64_t x) const {",
      "        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
      "        return splitmix64(x + FIXED_RANDOM);",
      "    }",
      "};"
    ],
    "description": "Custom hash for unordered map"
  },

  "Usaco": {
    "prefix": "usaco",
    "body": [
      "/*",
      "ID: anogh.h1",
      "TASK: ${1:task name}",
      "LANG: C++",
      "*/",
      "",
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "",
      "int main() {",
      "    ios_base::sync_with_stdio(false);",
      "    cin.tie(0);",
      "",
      "#ifndef LOCAL",
      "    freopen(\"${1:task name}.in\", \"r\", stdin);",
      "    freopen(\"${1:task name}.out\", \"w\", stdout);",
      "#endif",
      "",
      "    ${2:// your code}",
      "",
      "    return 0;",
      "}"
    ],
    "description": "Usaco"
  }
}
